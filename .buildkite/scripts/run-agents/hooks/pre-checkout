#!/bin/bash

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

ES_ORIGINAL_GIT_BINARY=$(which git)
export ES_ORIGINAL_GIT_BINARY

mkdir -p "$HOME/git-wrapper"
cat << 'EOF' > "$HOME/git-wrapper/git"
#!/bin/bash

if [[ "${1:-}" == "submodule" || "${1:-}" == "clone" ]]; then exit 0; fi

"$ES_ORIGINAL_GIT_BINARY" "${@}"
EOF

chmod +x "$HOME/git-wrapper/git"

export PATH="$HOME/git-wrapper:$PATH"

git init "${BUILDKITE_BUILD_CHECKOUT_PATH}"
git --git-dir "${BUILDKITE_BUILD_CHECKOUT_PATH}/.git" remote add origin "${BUILDKITE_REPO}"
git --git-dir "${BUILDKITE_BUILD_CHECKOUT_PATH}/.git" sparse-checkout init --cone
git --git-dir "${BUILDKITE_BUILD_CHECKOUT_PATH}/.git" sparse-checkout set .buildkite
if [[ -n "${ES_PARTIAL_CHECKOUT_PATHS:-}" ]]; then
  git --git-dir "${BUILDKITE_BUILD_CHECKOUT_PATH}/.git" sparse-checkout add "$ES_PARTIAL_CHECKOUT_PATHS"
fi

export BUILDKITE_GIT_CLONE_FLAGS="-v --filter=blob:none --no-checkout --depth=1 --sparse"
export BUILDKITE_GIT_FETCH_FLAGS="-v --update-shallow --depth 1"
